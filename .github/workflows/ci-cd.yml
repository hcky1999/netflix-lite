name: Netflix Lite CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/ci-cd.yml'

jobs:
  deploy:
    name: 🚀 Deploy SAM Stack
    runs-on: ubuntu-latest
    
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v3

      - name: ⚙️ Set Up AWS SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 🐳 Build SAM App (Docker-based Lambda)
        run: |
          cd backend
          sam build

      - name: 🚀 Deploy SAM Stack with CloudFront
        run: |
          cd backend
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --parameter-overrides S3BucketName=netflix-lite-${{ github.run_number }}

      - name: 📦 Build Frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: 🌐 Deploy Frontend to S3
        run: |
          BUCKET_NAME=$(aws cloudformation describe-stacks --stack-name netflix-lite-stack --query 'Stacks[0].Outputs[?OutputKey==`S3BucketName`].OutputValue' --output text)
          aws s3 sync frontend/dist/ s3://$BUCKET_NAME --delete

      - name: 🔄 Invalidate CloudFront Cache
        run: |
          DISTRIBUTION_ID=$(aws cloudformation describe-stacks --stack-name netflix-lite-stack --query 'Stacks[0].Outputs[?OutputKey==`DistributionId`].OutputValue' --output text)
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"